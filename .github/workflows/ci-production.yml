name: Continuous Integration

on:
  push:
    branches:
      - main
      - master
  release:
    types:
      - created

jobs:
  linux-tests:
    strategy:
      fail-fast: false
      matrix:
        config:
          - python-version: 3.8
            tox: 38
          - python-version: 3.9
            tox: 39
          - python-version: "3.10"
            tox: 310
          - python-version: 3.11
            tox: 311
        poetry-version: [ 1.3.2 ]
        os: [ ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up testing Python ${{ matrix.config.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.python-version }}
      - name: Set up base Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntugis/ppa && sudo apt-get update && sudo apt-get install -y build-essential gdal-bin libgdal-dev
          python -m pip install --upgrade pip tox
      - name: Run tox
        run: tox -e py${{ matrix.config.tox }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
  build-and-publish:
    name: Build and publish Python distributions ðŸ“¦ to PyPI and TestPyPI
    runs-on: ubuntu-22.04
    needs:
      - linux-tests
    steps:
      - uses: actions/checkout@v2
      - name: Set up base Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2
      - name: Publish distribution ðŸ“¦ with test.pypi.org
        if: startsWith(github.ref, 'refs/tags')
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_API_TOKEN }}
          poetry build
          poetry publish -r testpypi
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry build
          poetry publish
